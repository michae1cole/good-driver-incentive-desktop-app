/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.team2.gooddriverincentiveprogram;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author lizst
 */
public class RemoveUserGUI extends javax.swing.JFrame {

    /**
     * Creates new form RemoveUserGUI
     */
    public RemoveUserGUI() {
        initComponents();
    }
    private int selectedDriverID = -1;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DriverList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        setInactiveButton = new javax.swing.JButton();
        setActiveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(45, 49, 66));

        jPanel3.setBackground(new java.awt.Color(191, 192, 192));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Set Account to Active/Inactive");

        DriverList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        DriverList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                DriverListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(DriverList);

        jLabel2.setText("Select a Driver");

        setInactiveButton.setText("Set Inactive");
        setInactiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setInactiveButtonActionPerformed(evt);
            }
        });

        setActiveButton.setText("Set Active");
        setActiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setActiveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(setActiveButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(setInactiveButton))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(80, 80, 80))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(183, 183, 183))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setInactiveButton)
                    .addComponent(setActiveButton))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 643, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 329, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DriverListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_DriverListValueChanged
        String selectedDriver = DriverList.getSelectedValue();
        String [] tokens = selectedDriver.split(": ");
        selectedDriverID = Integer.parseInt(tokens[0]);
    }//GEN-LAST:event_DriverListValueChanged

    private void setInactiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setInactiveButtonActionPerformed
        try {
            if(selectedDriverID != -1) {

                int DID = getDriverID();
                int status = getDriverStatus();

                //Check to see if this driver is in the points table 
                if(status == 0) {
                    JOptionPane.showMessageDialog(null, "Selected driver is already inactive.");
                }else{
                    //Remove the driver from the DriverPoints table and Update User Table 
                    PreparedStatement DriverRemovalPS = MyConnection.getConnection().prepareStatement("DELETE FROM DriverPoints WHERE DriverID = ?");
                    DriverRemovalPS.setInt(1, DID);
                    DriverRemovalPS.executeUpdate();
                    
                    PreparedStatement DriverUpdatePS = MyConnection.getConnection().prepareStatement("UPDATE Users SET ActiveAccount = ? WHERE UserID = ?");
                    DriverUpdatePS.setInt(1, 0);
                    DriverUpdatePS.setInt(2, selectedDriverID);
                    DriverUpdatePS.executeUpdate();
                    
                    this.dispose();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please make a driver selection.");
            }
        } catch(Exception e) {
            Logger.getLogger(AddDriver.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_setInactiveButtonActionPerformed

    private void setActiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setActiveButtonActionPerformed
        try {
            if(selectedDriverID != -1) {

                int status = getDriverStatus();

                
                if(status == 1) {
                    JOptionPane.showMessageDialog(null, "Selected driver is already active.");
                }else{
                    //Update User Table 
                    PreparedStatement DriverUpdatePS = MyConnection.getConnection().prepareStatement("UPDATE Users SET ActiveAccount = ? WHERE UserID = ?");
                    DriverUpdatePS.setInt(1, 1);
                    DriverUpdatePS.setInt(2, selectedDriverID);
                    DriverUpdatePS.executeUpdate();
                    this.dispose();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please make a driver selection.");
            }
        } catch(Exception e) {
            Logger.getLogger(AddDriver.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_setActiveButtonActionPerformed
    
    private int getDriverID() throws SQLException{
                // Get the driverID
                int ID = 0;
                PreparedStatement DriverPS = MyConnection.getConnection().prepareStatement("Select DriverID From Driver Where UserID=?");
                DriverPS.setInt(1, selectedDriverID);
                ResultSet DriverRS = DriverPS.executeQuery();
                if(DriverRS.next()){
                    ID = DriverRS.getInt("DriverID");
                }
        return ID;
    }
    
    private int getDriverStatus() throws SQLException{
        // Get the driver Status 
        int status = 0;
        PreparedStatement DriverPS = MyConnection.getConnection().prepareStatement("Select * From Users Where UserID=?");
        DriverPS.setInt(1, selectedDriverID);
        ResultSet DriverRS = DriverPS.executeQuery();
        if(DriverRS.next()){
            status = DriverRS.getInt("ActiveAccount");
        }
        return status;
    }
    public void setDriverList() throws SQLException {
        DefaultListModel model = new DefaultListModel(); //create a new list model

        PreparedStatement statement = MyConnection.getConnection().prepareStatement("Select * From Users Where UserType='D'");
        ResultSet resultSet = statement.executeQuery(); //run your query

        while (resultSet.next()) //go through each row that your query returns
        {
            String ItemList = resultSet.getInt("UserID") + ": " + resultSet.getString("FirstName") + " " + resultSet.getString("MiddleName") + " " + resultSet.getString("LastName"); //get the element in column "item_code"
            model.addElement(ItemList); //add each item to the model
        }
        DriverList.setModel(model);

        resultSet.close();
        statement.close();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoveUserGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> DriverList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton setActiveButton;
    private javax.swing.JButton setInactiveButton;
    // End of variables declaration//GEN-END:variables
}
