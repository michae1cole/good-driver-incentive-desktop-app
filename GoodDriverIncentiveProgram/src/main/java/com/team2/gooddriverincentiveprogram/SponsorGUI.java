/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.team2.gooddriverincentiveprogram;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.json.JSONObject;
import org.springframework.security.crypto.bcrypt.BCrypt;

/**
 *
 * @author benjaminjoye
 */
public class SponsorGUI extends javax.swing.JFrame {

    /**
     * Creates new form sponsor
     */
    public SponsorGUI() {
        initComponents();
    }
    
    private int userID;
    private static final int ITEM_REQUEST_LIMIT = 10;
    private String lastImageURL;
    private Boolean searchTableSelected = false;
    private Boolean catalogTableSelected = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        layeredPane = new javax.swing.JLayeredPane();
        myAccount = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton24 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton25 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton26 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton27 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        myApplication = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        catalog = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        catalogEditor = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        reporting = new javax.swing.JPanel();
        driverPoints = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(45, 49, 66));

        jButton6.setText("Log Out");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Catalog Editor");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("My Application");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Catalog");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton23.setText("My Account");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton28.setText("Driver Points");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setText("Reporting");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton30.setText("Delete Account");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        layeredPane.setLayout(new java.awt.CardLayout());

        myAccount.setBackground(new java.awt.Color(191, 192, 192));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 26)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("My Account");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Name:");

        jTextField1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton24.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton24.setText("Update");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Username:");

        jTextField2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jButton25.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton25.setText("Update");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setText("Preferred Name:");

        jTextField3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        jButton26.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton26.setText("Update");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setText("Password:");

        jButton27.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton27.setText("Update");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel16.setText("Sponsor");

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel18.setText("Account Type:");

        jPasswordField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout myAccountLayout = new javax.swing.GroupLayout(myAccount);
        myAccount.setLayout(myAccountLayout);
        myAccountLayout.setHorizontalGroup(
            myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(myAccountLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myAccountLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(82, 82, 82)
                        .addComponent(jLabel16))
                    .addGroup(myAccountLayout.createSequentialGroup()
                        .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(61, 61, 61)
                        .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jPasswordField1))
                        .addGap(18, 18, 18)
                        .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton27))))
                .addContainerGap(406, Short.MAX_VALUE))
        );
        myAccountLayout.setVerticalGroup(
            myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton24))
                .addGap(18, 18, 18)
                .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton25))
                .addGap(18, 18, 18)
                .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton26))
                .addGap(18, 18, 18)
                .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jButton27)
                    .addComponent(jPasswordField1))
                .addGap(18, 18, 18)
                .addGroup(myAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel16))
                .addGap(164, 164, 164))
        );

        layeredPane.add(myAccount, "card2");

        myApplication.setBackground(new java.awt.Color(191, 192, 192));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 26)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("My Application");

        javax.swing.GroupLayout myApplicationLayout = new javax.swing.GroupLayout(myApplication);
        myApplication.setLayout(myApplicationLayout);
        myApplicationLayout.setHorizontalGroup(
            myApplicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myApplicationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 1022, Short.MAX_VALUE)
                .addContainerGap())
        );
        myApplicationLayout.setVerticalGroup(
            myApplicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myApplicationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(481, Short.MAX_VALUE))
        );

        layeredPane.add(myApplication, "card3");

        catalog.setBackground(new java.awt.Color(191, 192, 192));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 26)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Catalog");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 109, Short.MAX_VALUE)
        );

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("description");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("price");

        jButton10.setText("Buy");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("description");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("price");

        jButton11.setText("Buy");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 109, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 109, Short.MAX_VALUE)
        );

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("description");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("price");

        jButton12.setText("Buy");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("description");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("price");

        jButton13.setText("Buy");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 109, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout catalogLayout = new javax.swing.GroupLayout(catalog);
        catalog.setLayout(catalogLayout);
        catalogLayout.setHorizontalGroup(
            catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catalogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 1022, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(catalogLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addGroup(catalogLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(53, 53, 53)
                .addGroup(catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(catalogLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59)
                .addGroup(catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(catalogLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(catalogLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60))
        );
        catalogLayout.setVerticalGroup(
            catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catalogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(catalogLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(catalogLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(catalogLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(catalogLayout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(catalogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(288, Short.MAX_VALUE))
        );

        layeredPane.add(catalog, "card4");

        catalogEditor.setBackground(new java.awt.Color(191, 192, 192));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Update Point-to-Dollar Ratio for Drivers");

        jTextField4.setMinimumSize(new java.awt.Dimension(7, 30));
        jTextField4.setPreferredSize(new java.awt.Dimension(7, 30));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ListingID", "Title", "Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Item Search Table for Company Catalog");
        jLabel20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTextField5.setMinimumSize(new java.awt.Dimension(7, 30));
        jTextField5.setPreferredSize(new java.awt.Dimension(7, 30));
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Price", "Quantity", "ItemID", "ImageURL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
            jTable3.getColumnModel().getColumn(3).setResizable(false);
            jTable3.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Current Company Catalog Items");
        jLabel22.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("(No Spaces & Comma-separated) Keywords for Item Search");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jButton3.setText("Add Item to Catalog");
        jButton3.setMaximumSize(new java.awt.Dimension(170, 25));
        jButton3.setMinimumSize(new java.awt.Dimension(170, 25));
        jButton3.setPreferredSize(new java.awt.Dimension(170, 25));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Remove Item from Catalog");
        jButton4.setActionCommand("Remove Item to Catalog");
        jButton4.setMaximumSize(new java.awt.Dimension(170, 25));
        jButton4.setMinimumSize(new java.awt.Dimension(170, 25));
        jButton4.setPreferredSize(new java.awt.Dimension(170, 25));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout catalogEditorLayout = new javax.swing.GroupLayout(catalogEditor);
        catalogEditor.setLayout(catalogEditorLayout);
        catalogEditorLayout.setHorizontalGroup(
            catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catalogEditorLayout.createSequentialGroup()
                .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(catalogEditorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE))
                        .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(catalogEditorLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane4)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(50, 50, 50))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogEditorLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)))
                        .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(catalogEditorLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(catalogEditorLayout.createSequentialGroup()
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(catalogEditorLayout.createSequentialGroup()
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        catalogEditorLayout.setVerticalGroup(
            catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catalogEditorLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(catalogEditorLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(catalogEditorLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(14, 14, 14)
                        .addGroup(catalogEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(catalogEditorLayout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel21.getAccessibleContext().setAccessibleDescription("");

        layeredPane.add(catalogEditor, "card5");

        reporting.setBackground(new java.awt.Color(191, 192, 192));

        javax.swing.GroupLayout reportingLayout = new javax.swing.GroupLayout(reporting);
        reporting.setLayout(reportingLayout);
        reportingLayout.setHorizontalGroup(
            reportingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1042, Short.MAX_VALUE)
        );
        reportingLayout.setVerticalGroup(
            reportingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 526, Short.MAX_VALUE)
        );

        layeredPane.add(reporting, "card6");

        driverPoints.setBackground(new java.awt.Color(191, 192, 192));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Example", "Example", "Example"},
                {"Example", "Example", "Example"},
                {"Example", "Example", "Example"},
                {"Example", "Example", "Example"}
            },
            new String [] {
                "Item", "Price", "Date Purchased"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton15.setText("My Application");

        jButton16.setText("My Application");

        jLabel17.setText("Recent Purchases");

        javax.swing.GroupLayout driverPointsLayout = new javax.swing.GroupLayout(driverPoints);
        driverPoints.setLayout(driverPointsLayout);
        driverPointsLayout.setHorizontalGroup(
            driverPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(driverPointsLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(driverPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1003, Short.MAX_VALUE)
                    .addGroup(driverPointsLayout.createSequentialGroup()
                        .addGroup(driverPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(driverPointsLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        driverPointsLayout.setVerticalGroup(
            driverPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, driverPointsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(driverPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton16)
                    .addComponent(jButton15))
                .addContainerGap(214, Short.MAX_VALUE))
        );

        layeredPane.add(driverPoints, "card8");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 438, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(layeredPane)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton8)
                    .addComponent(jButton6)
                    .addComponent(jButton29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton23)
                    .addComponent(jButton7)
                    .addComponent(jButton28)
                    .addComponent(jButton30))
                .addContainerGap(555, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(81, Short.MAX_VALUE)
                    .addComponent(layeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Logout button
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //Redirect to login frame
        LoginGUI loginFrame = new LoginGUI();
        loginFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        loginFrame.setTitle("Good Driver Incentive Program - Login");
        loginFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        switchPanels(catalogEditor);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        switchPanels(myAccount);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        switchPanels(driverPoints);
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
        switchPanels(reporting);
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    //Preferred Name Update Button
    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        String newPreferredName = jTextField3.getText();
        try {
            PreparedStatement preferredNameSelectPS;
            ResultSet preferredNameSelectRS;
            String preferredNameSelectQuery = "SELECT * FROM Users WHERE UserID=?";
            preferredNameSelectPS = MyConnection.getConnection().prepareStatement(preferredNameSelectQuery);
            preferredNameSelectPS.setInt(1, this.getUserID());
            preferredNameSelectRS = preferredNameSelectPS.executeQuery();
            if(preferredNameSelectRS.next()) {
                String oldPreferredName = preferredNameSelectRS.getString("PreferredName");
                //If new preferred name is same as old, don't update database
                if(newPreferredName.equals(oldPreferredName)) {
                    JOptionPane.showMessageDialog(null, "New preferred name is the same as your old preferred name.");
                } else {
                    //Update database to have new preferred name
                    PreparedStatement updatePreferredNamePreparedStatement = MyConnection.getConnection().prepareStatement("UPDATE Users SET PreferredName=? WHERE UserID=?");
                    updatePreferredNamePreparedStatement.setString(1, newPreferredName);
                    updatePreferredNamePreparedStatement.setInt(2, this.getUserID());
                    updatePreferredNamePreparedStatement.executeUpdate();
                    this.setSponsorPreferredName(newPreferredName);
                }
            }
        } catch(SQLException e) {
            Logger.getLogger(SponsorGUI.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    //Password Update Button
    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        String newPassword = jPasswordField1.getText();
        //Check for valid password using regex
        //https://www.geeksforgeeks.org/how-to-validate-a-password-using-regular-expressions-in-java/
        String passwordRegex = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,20}$"; 
        Pattern passwordPattern = Pattern.compile(passwordRegex);
        Matcher passwordMatcher = passwordPattern.matcher(newPassword);
        if(!passwordMatcher.matches()) {
            JOptionPane.showMessageDialog(null, "Password must be 8-20 characters, have one uppercase, one lowercase, one digit, one special character, and no white space.");
        } else {
            //If password does match criteria, get the user's current password
            try {
                PreparedStatement passwordSelectPS;
                ResultSet passwordSelectRS;
                String passwordSelectQuery = "SELECT * FROM Users WHERE UserID=?";
                passwordSelectPS = MyConnection.getConnection().prepareStatement(passwordSelectQuery);
                passwordSelectPS.setInt(1, this.getUserID());
                passwordSelectRS = passwordSelectPS.executeQuery();
                if(passwordSelectRS.next()) {
                    String oldPassword = passwordSelectRS.getString("UserPassword");
                    //If new password is same as old, don't update database
                    if(BCrypt.checkpw(newPassword, oldPassword)) {
                        JOptionPane.showMessageDialog(null, "New password is the same as your old password.");
                    } else {
                        //Update database to have new password
                        PreparedStatement updatePasswordPreparedStatement = MyConnection.getConnection().prepareStatement("UPDATE Users SET UserPassword=? WHERE UserID=?");
                        String pw_hash = BCrypt.hashpw(newPassword, BCrypt.gensalt());
                        updatePasswordPreparedStatement.setString(1, pw_hash);
                        updatePasswordPreparedStatement.setInt(2, this.getUserID());
                        updatePasswordPreparedStatement.executeUpdate();
                        this.setSponsorPassword(newPassword);
                        //Record password change for audit loging
                        PreparedStatement passwordChangePS = MyConnection.getConnection().prepareStatement("INSERT INTO PasswordChange (PasswordChangeDate, PasswordChangeType, UserChangedID, UserChangingID) VALUES (CURRENT_TIMESTAMP, ?, ?, ?)");
                        passwordChangePS.setString(1, "change from profile - self change");
                        passwordChangePS.setInt(2, this.getUserID());
                        passwordChangePS.setInt(3, this.getUserID());
                        passwordChangePS.executeUpdate();
                    }
                }
            } catch(SQLException e) {
                Logger.getLogger(SponsorGUI.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        switchPanels(myApplication);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        switchPanels(catalog);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    //Name Update Button
    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        String newName = jTextField1.getText();
        if(newName.replaceAll(" ", "").equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter a first, middle, and last name separated by spaces.");
        } else {
            String[] splitName = newName.split(" ");
            //Check if all names were entered
            if(splitName.length != 3) {
                JOptionPane.showMessageDialog(null, "Please enter a first, middle, and last name separated by spaces.");
            } else {
                try {
                    String newFirstName = splitName[0];
                    String newMiddleName = splitName[1];
                    String newLastName = splitName[2];
                    PreparedStatement nameSelectPS;
                    ResultSet nameSelectRS;
                    String nameSelectQuery = "SELECT * FROM Users WHERE UserID=?";
                    nameSelectPS = MyConnection.getConnection().prepareStatement(nameSelectQuery);
                    nameSelectPS.setInt(1, this.getUserID());
                    nameSelectRS = nameSelectPS.executeQuery();
                    if(nameSelectRS.next()) {
                        //Update the database to have the three new names
                        PreparedStatement updateFirstNamePreparedStatement = MyConnection.getConnection().prepareStatement("UPDATE Users SET FirstName=? WHERE UserID=?");
                        updateFirstNamePreparedStatement.setString(1, newFirstName);
                        updateFirstNamePreparedStatement.setInt(2, this.getUserID());
                        PreparedStatement updateMiddleNamePreparedStatement = MyConnection.getConnection().prepareStatement("UPDATE Users SET MiddleName=? WHERE UserID=?");
                        updateMiddleNamePreparedStatement.setString(1, newMiddleName);
                        updateMiddleNamePreparedStatement.setInt(2, this.getUserID());
                        PreparedStatement updateLastNamePreparedStatement = MyConnection.getConnection().prepareStatement("UPDATE Users SET LastName=? WHERE UserID=?");
                        updateLastNamePreparedStatement.setString(1, newLastName);
                        updateLastNamePreparedStatement.setInt(2, this.getUserID());
                        updateFirstNamePreparedStatement.executeUpdate();
                        updateMiddleNamePreparedStatement.executeUpdate();
                        updateLastNamePreparedStatement.executeUpdate();
                        this.setSponsorName(newName);
                    }
                } catch(SQLException e) {
                    Logger.getLogger(SponsorGUI.class.getName()).log(Level.SEVERE, null, e);
                }
            }
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    //Username Update Button
    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        String newUsername = jTextField2.getText();
        //Check for valid username using regex (email)
        //https://howtodoinjava.com/java/regex/java-regex-validate-email-address/
        String usernameRegex = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";
        Pattern usernamePattern = Pattern.compile(usernameRegex);
        Matcher usernameMatcher = usernamePattern.matcher(newUsername);
        if(!usernameMatcher.matches()) {
            JOptionPane.showMessageDialog(null, "Please enter a valid username.", "Username Invalid", 2);
        } else {
            //If username does match criteria, get the user's current username
            try {
                PreparedStatement usernameSelectPS;
                ResultSet usernameSelectRS;
                String usernameSelectQuery = "SELECT * FROM Users WHERE UserID=?";
                usernameSelectPS = MyConnection.getConnection().prepareStatement(usernameSelectQuery);
                usernameSelectPS.setInt(1, this.getUserID());
                usernameSelectRS = usernameSelectPS.executeQuery();
                if(usernameSelectRS.next()) {
                    String oldUsername = usernameSelectRS.getString("Username");
                    //If new username is same as old, don't update database
                    if(newUsername.equals(oldUsername)) {
                        JOptionPane.showMessageDialog(null, "New username is the same as your old username.");
                    } else {
                        //See if username is already in-use
                        PreparedStatement usernameCheckPS;
                        ResultSet usernameCheckRS;
                        String usernameCheckQuery = "SELECT * FROM Users WHERE Username=?";
                        usernameCheckPS = MyConnection.getConnection().prepareStatement(usernameCheckQuery);
                        usernameCheckPS.setString(1, newUsername);
                        usernameCheckRS = usernameCheckPS.executeQuery();
                        //If new username is already being used by another account, don't update database
                        if(usernameCheckRS.next()) {
                            JOptionPane.showMessageDialog(null, "Username already in use by another account.");
                        } else {
                            //Update database to have new username
                            PreparedStatement updateUsernamePreparedStatement = MyConnection.getConnection().prepareStatement("UPDATE Users SET Username=? WHERE UserID=?");
                            updateUsernamePreparedStatement.setString(1, newUsername);
                            updateUsernamePreparedStatement.setInt(2, this.getUserID());
                            updateUsernamePreparedStatement.executeUpdate();
                            this.setSponsorUsername(newUsername);
                        }
                    }
                }
            } catch(SQLException e) {
                Logger.getLogger(SponsorGUI.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    //Remove item from company catalog button
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //If item was selected from the catalog table and not the search table, remove it from the company catalog
        if(!getSearchTableSelected() && getCatalogTableSelected()) {
            //Get the item information from the jTable row selected
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
            int selectedRow = jTable3.getSelectedRow();
            int itemID = Integer.parseInt(model.getValueAt(selectedRow, 3).toString());
            try {
                //Get companyID from sponsor
                PreparedStatement sponsorPS = MyConnection.getConnection().prepareStatement("SELECT * FROM Sponsor WHERE UserID=?");
                sponsorPS.setInt(1, this.getUserID());
                ResultSet sponsorRS = sponsorPS.executeQuery();
                //If sponsor was found in database
                if(sponsorRS.next()) {
                    int companyID = sponsorRS.getInt("CompanyID");
                    PreparedStatement catalogItemRemovalPS = MyConnection.getConnection().prepareStatement("DELETE FROM CatalogItems WHERE ItemID=?");
                    catalogItemRemovalPS.setInt(1, itemID);
                    catalogItemRemovalPS.executeUpdate();
                    //Update catalog item table
                    updateCatalogItemTable();
                }
            } catch(SQLException e) {
                Logger.getLogger(CatalogInformation.class.getName()).log(Level.SEVERE, null, e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "You cannot remove an item that isn't already in your catalog.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    //Add item to company catalog button
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //If item was selected from the search table and not the catalog table, add it to the company catalog
        if(getSearchTableSelected() && !getCatalogTableSelected()) {
            //Get the item information from the jTable row selected
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int selectedRow = jTable1.getSelectedRow();
            String listingID = model.getValueAt(selectedRow, 0).toString();
            String title = model.getValueAt(selectedRow, 1).toString();
            double price = (double) model.getValueAt(selectedRow, 2);
            price = Math.round(price * 100.0) / 100.0;
            String imageURL = getLastImageURL();
            int quantity = (int) model.getValueAt(selectedRow, 3);
            try {
                //Get companyID from sponsor
                PreparedStatement sponsorPS = MyConnection.getConnection().prepareStatement("SELECT * FROM Sponsor WHERE UserID=?");
                sponsorPS.setInt(1, this.getUserID());
                ResultSet sponsorRS = sponsorPS.executeQuery();
                //If sponsor was found in database
                if(sponsorRS.next()) {
                    int companyID = sponsorRS.getInt("CompanyID");
                    PreparedStatement catalogItemPS = MyConnection.getConnection().prepareStatement("INSERT INTO CatalogItems (CompanyID, Price, ItemDescription, ItemImage, Quantity, ListingID) VALUES (?, ?, ?, ?, ?, ?)");
                    catalogItemPS.setInt(1, companyID);
                    catalogItemPS.setDouble(2, price);
                    catalogItemPS.setString(3, title);
                    catalogItemPS.setString(4, imageURL);
                    catalogItemPS.setInt(5, quantity);
                    catalogItemPS.setString(6, listingID);
                    catalogItemPS.executeUpdate();
                    //Update catalog item table
                    updateCatalogItemTable();
                }
            } catch(SQLException e) {
                Logger.getLogger(CatalogInformation.class.getName()).log(Level.SEVERE, null, e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "You cannot add an item that isn't from the search table.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    //Company catalog item row selected
    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        setSearchTableSelected(false);
        setCatalogTableSelected(true);
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        int selectedRow = jTable3.getSelectedRow();
        String title = "Title:\n" + model.getValueAt(selectedRow, 0).toString() + "\n\n";
        String price = "Price:\n$" + String.format("%.2f", model.getValueAt(selectedRow, 1)) + "\n\n";
        //Default ratio
        int pointToDollarConversion = 100;
        //Query database for company's point to dollar conversion ratio
        try {
            PreparedStatement sponsorPS = MyConnection.getConnection().prepareStatement("SELECT * FROM Sponsor WHERE UserID=?");
            sponsorPS.setInt(1, this.getUserID());
            ResultSet sponsorRS = sponsorPS.executeQuery();
            if(sponsorRS.next()) {
                int companyID = sponsorRS.getInt("CompanyID");
                PreparedStatement pointToDollarConversionPS = MyConnection.getConnection().prepareStatement("SELECT * FROM Company WHERE CompanyID=?");
                pointToDollarConversionPS.setInt(1, companyID);
                ResultSet pointToDollarConversionRS = pointToDollarConversionPS.executeQuery();
                if(pointToDollarConversionRS.next()) {
                    pointToDollarConversion = pointToDollarConversionRS.getInt("PointToDollar");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(SponsorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        double pointCost = Double.parseDouble(model.getValueAt(selectedRow, 1).toString()) * pointToDollarConversion;
        String pointValue = "Point Cost for Drivers:\n" + String.format("%.2f", pointCost) + "\n\n";
        String quantity = "Quantity:\n" + model.getValueAt(selectedRow, 2).toString();
        //Update jTextArea with information from selected item
        jTextArea1.setText(title + price + pointValue + quantity);
        //Get Image URL from database to display
        String imageURL = model.getValueAt(selectedRow, 4).toString();
        try {
            URL url = new URL(imageURL);
            Image image = ImageIO.read(url);
            jLabel21.setIcon(new ImageIcon(image));
        } catch (Exception ex) {
            Logger.getLogger(SponsorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable3MouseClicked

    //Submit keyword search on Etsy button
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String keywords = jTextField5.getText();
        String etsyQuery;
        //If the sponsor provided keywords for the search
        if(keywords.equals("")) {
            etsyQuery = "https://openapi.etsy.com/v2/listings/active?api_key=pzm9kr33wye2gmv9fy2h4g64&limit="+getItemRequestLimit();
        } else {
            etsyQuery = "https://openapi.etsy.com/v2/listings/active?api_key=pzm9kr33wye2gmv9fy2h4g64&keywords=" + keywords + "&limit="+getItemRequestLimit();
        }
        //Send the request to etsy for listing results back
        try {
            HttpRequest request = HttpRequest.newBuilder()
            .uri(URI.create(etsyQuery))
            .method("GET", HttpRequest.BodyPublishers.noBody())
            .build();
            HttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());
            JSONObject jsonResponse = new JSONObject(response.body());

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            //Clear all rows from previous search if necessary
            if(dtm.getRowCount() > 0) {
                for(int i = dtm.getRowCount()-1; i >= 0; i--) {
                    dtm.removeRow(i);
                }
            }
            //Add each listing as a row to the table
            for(int i = 0; i < jsonResponse.getJSONArray("results").length(); i++) {
                int listingID = jsonResponse.getJSONArray("results").getJSONObject(i).getInt("listing_id");
                String title = jsonResponse.getJSONArray("results").getJSONObject(i).getString("title");
                title = title.replaceAll("&#39;", "\'");
                title = title.replaceAll("&quot;","\"");
                double price = Double.parseDouble(jsonResponse.getJSONArray("results").getJSONObject(i).getString("price"));
                int quantity = jsonResponse.getJSONArray("results").getJSONObject(i).getInt("quantity");
                Object[] rowData = {listingID, title, price, quantity};
                dtm.addRow(rowData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue with query: please be sure keywords are spelled correctly, comma-separated, and contain no white space.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    //New search item row selected event
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        setSearchTableSelected(true);
        setCatalogTableSelected(false);
        //Get the item information from the jTable row selected
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedRow = jTable1.getSelectedRow();
        String title = "Title:\n" + model.getValueAt(selectedRow, 1).toString() + "\n\n";
        String price = "Price:\n$" + String.format("%.2f", model.getValueAt(selectedRow, 2)) + "\n\n";
        //Default ratio
        int pointToDollarConversion = 100;
        //Query database for company's point to dollar conversion ratio
        try {
            PreparedStatement sponsorPS = MyConnection.getConnection().prepareStatement("SELECT * FROM Sponsor WHERE UserID=?");
            sponsorPS.setInt(1, this.getUserID());
            ResultSet sponsorRS = sponsorPS.executeQuery();
            if(sponsorRS.next()) {
                int companyID = sponsorRS.getInt("CompanyID");
                PreparedStatement pointToDollarConversionPS = MyConnection.getConnection().prepareStatement("SELECT * FROM Company WHERE CompanyID=?");
                pointToDollarConversionPS.setInt(1, companyID);
                ResultSet pointToDollarConversionRS = pointToDollarConversionPS.executeQuery();
                if(pointToDollarConversionRS.next()) {
                    pointToDollarConversion = pointToDollarConversionRS.getInt("PointToDollar");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(SponsorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        double pointCost = Double.parseDouble(model.getValueAt(selectedRow, 2).toString()) * pointToDollarConversion;
        String pointValue = "Point Cost for Drivers:\n" + String.format("%.2f", pointCost) + "\n\n";
        String quantity = "Quantity:\n" + model.getValueAt(selectedRow, 3).toString();
        //Update jTextArea with information from selected item
        jTextArea1.setText(title + price + pointValue + quantity);
        //Get Image URL from Etsy to display
        try {
            int listingID = (int) model.getValueAt(selectedRow, 0);
            HttpRequest request = HttpRequest.newBuilder()
            .uri(URI.create("https://openapi.etsy.com/v2/listings/" + listingID + "/images?api_key=pzm9kr33wye2gmv9fy2h4g64"))
            .method("GET", HttpRequest.BodyPublishers.noBody())
            .build();
            HttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());
            JSONObject jsonResponse = new JSONObject(response.body());
            setLastImageURL(jsonResponse.getJSONArray("results").getJSONObject(0).getString("url_170x135"));
            URL url = new URL(getLastImageURL());
            Image image = ImageIO.read(url);
            jLabel21.setIcon(new ImageIcon(image));
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Issue with query: problem getting the image URL.");
        }
    }//GEN-LAST:event_jTable1MouseClicked

    //Update Point to Dollar Ratio button
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int newPointToDollarRatio = Integer.parseInt(jTextField4.getText());
        int oldPointToDollarRatio;
        //Query database for company's point to dollar conversion ratio
        try {
            PreparedStatement sponsorPS = MyConnection.getConnection().prepareStatement("SELECT * FROM Sponsor WHERE UserID=?");
            sponsorPS.setInt(1, this.getUserID());
            ResultSet sponsorRS = sponsorPS.executeQuery();
            //If sponsor was found in database with user sponsor ID
            if(sponsorRS.next()) {
                //Get the company point to dollar conversion using sponsor's CompanyID
                int companyID = sponsorRS.getInt("CompanyID");
                PreparedStatement pointToDollarConversionPS = MyConnection.getConnection().prepareStatement("SELECT * FROM Company WHERE CompanyID=?");
                pointToDollarConversionPS.setInt(1, companyID);
                ResultSet pointToDollarConversionRS = pointToDollarConversionPS.executeQuery();
                //If point to dollar ratio was found for that CompanyID
                if(pointToDollarConversionRS.next()) {
                    oldPointToDollarRatio = pointToDollarConversionRS.getInt("PointToDollar");
                    //If the new ratio is the same as old, don't update
                    if(newPointToDollarRatio == oldPointToDollarRatio) {
                        JOptionPane.showMessageDialog(null, "Company point to dollar ratio is already " + newPointToDollarRatio + " points per dollar.");
                    } else {
                        //Update Company with new point to dollar ratio
                        PreparedStatement pointToDollarConversionUpdatePS = MyConnection.getConnection().prepareStatement("UPDATE Company SET PointToDollar=? WHERE CompanyID=?");
                        pointToDollarConversionUpdatePS.setInt(1, newPointToDollarRatio);
                        pointToDollarConversionUpdatePS.setInt(2, companyID);
                        pointToDollarConversionUpdatePS.executeUpdate();
                        setCompanyPointToDollarRatio(String.valueOf(newPointToDollarRatio));
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(SponsorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    //Helper Methods for getting and setting user information in the profile
    public void setSponsorName(String name) {
        jTextField1.setText(name);
    }
    
    public void setSponsorUsername(String username) {
        jTextField2.setText(username);
    }
    
    public void setSponsorPreferredName(String preferredName) {
        jTextField3.setText(preferredName);
    }
    
    public void setSponsorPassword(String password) {
        jPasswordField1.setText(password);
    }
    
    public void setCompanyPointToDollarRatio(String ratio) {
        jTextField4.setText(ratio);
    }
    
    public void setUserID(int id) {
        userID = id;
    }
    
    public int getUserID() {
        return userID;
    }
    
    public int getItemRequestLimit() {
        return ITEM_REQUEST_LIMIT;
    }
    
    public void setLastImageURL(String lastURL) {
        lastImageURL = lastURL;
    }
    
    public String getLastImageURL() {
        return lastImageURL;
    }
    
    public void setSearchTableSelected(Boolean selected) {
        searchTableSelected = selected;
    }
    
    public Boolean getSearchTableSelected() {
        return searchTableSelected;
    }
    
    public void setCatalogTableSelected(Boolean selected) {
        catalogTableSelected = selected;
    }
    
    public Boolean getCatalogTableSelected() {
        return catalogTableSelected;
    }
    
    public void formatCatalogItemTables() {
        TableColumnModel tcm = jTable1.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));
        tcm = jTable3.getColumnModel();
        tcm.removeColumn(tcm.getColumn(4));
        tcm.removeColumn(tcm.getColumn(3));
    }
    
    public void updateCatalogItemTable() {
        try {
            PreparedStatement sponsorPS = MyConnection.getConnection().prepareStatement("SELECT * FROM Sponsor WHERE UserID=?");
            sponsorPS.setInt(1, this.getUserID());
            ResultSet sponsorRS = sponsorPS.executeQuery();
            if(sponsorRS.next()) {
                int companyID = sponsorRS.getInt("CompanyID");
                PreparedStatement catalogItemPS = MyConnection.getConnection().prepareStatement("SELECT * FROM CatalogItems WHERE CompanyID=?");
                catalogItemPS.setInt(1, companyID);
                ResultSet catalogItemRS = catalogItemPS.executeQuery();
                DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
                //Clear all rows from previous entries if necessary
                if(dtm.getRowCount() > 0) {
                    for(int i = dtm.getRowCount()-1; i >= 0; i--) {
                        dtm.removeRow(i);
                    }
                }
                while(catalogItemRS.next()) {
                    Object[] rowData = {catalogItemRS.getString("ItemDescription"), catalogItemRS.getDouble("Price"), catalogItemRS.getInt("Quantity"), catalogItemRS.getInt("ItemID"), catalogItemRS.getString("ItemImage")};
                    dtm.addRow(rowData);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(SponsorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SponsorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SponsorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SponsorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SponsorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SponsorGUI().setVisible(true);
            }
        });
    }
    
    public void switchPanels(javax.swing.JPanel panel)
    {
        layeredPane.removeAll();
        layeredPane.add(panel);
        layeredPane.repaint();
        layeredPane.revalidate();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel catalog;
    private javax.swing.JPanel catalogEditor;
    private javax.swing.JPanel driverPoints;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLayeredPane layeredPane;
    private javax.swing.JPanel myAccount;
    private javax.swing.JPanel myApplication;
    private javax.swing.JPanel reporting;
    // End of variables declaration//GEN-END:variables
}
